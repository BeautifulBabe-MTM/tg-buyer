const TelegramBot = require('node-telegram-bot-api');
const { fetchAdidasProducts } = require('./AdidasParser');
const { fetchZaraProducts } = require('./ZaraParser');
const { fetchNikeProducts } = require('./NikeParser');
const { fetchPumaProducts } = require('./PumaParser');
const { fetchBershkaProducts } = require('./BershkaParser');

const token = '6673628321:AAE98WdYUWbeh30QJc3REwfEWei1qOIr2CU';
const bot = new TelegramBot(token, { polling: true });

const stores = [
    'Adidas', 'Zara', 'Nike', 'Puma', 'Bershka',
    '–º–∞–≥–∞–∑ 6', '–º–∞–≥–∞–∑ 7', '–º–∞–≥–∞–∑ 8', '–º–∞–≥–∞–∑ 9', '–º–∞–≥–∞–∑ 10'
];

const registeredUsers = new Set();

bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;

    if (registeredUsers.has(chatId)) {
        bot.sendMessage(chatId, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã.');
        const inlineKeyboard = [
            [{ text: 'Adidas', callback_data: 'store_0' }, { text: 'Zara', callback_data: 'store_1' }],
            [{ text: 'Nike', callback_data: 'store_2' }, { text: 'Puma', callback_data: 'store_3' }],
            [{ text: 'Bershka', callback_data: 'store_4' }, { text: '–º–∞–≥–∞–∑ 6', callback_data: 'store_5' }],
            [{ text: '–º–∞–≥–∞–∑ 7', callback_data: 'store_6' }, { text: '–º–∞–≥–∞–∑ 8', callback_data: 'store_7' }],
            [{ text: '–º–∞–≥–∞–∑ 9', callback_data: 'store_8' }, { text: '–º–∞–≥–∞–∑ 10', callback_data: 'store_9' }]
        ];

        bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:', {
            reply_markup: {
                inline_keyboard: inlineKeyboard
            }
        });
    } else {
        bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä:', {
            reply_markup: {
                keyboard: [
                    [
                        {
                            text: "–û—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–º–µ—Ä",
                            request_contact: true
                        }
                    ]
                ],
                resize_keyboard: true,
                one_time_keyboard: true
            }
        });
    }
});

bot.on('contact', async (msg) => {
    const chatId = msg.chat.id;
    const phoneNumber = msg.contact.phone_number;
    const nameOfUser = msg.contact.first_name;

    if (phoneNumber === '212654836803' || phoneNumber === '380959312506' || phoneNumber === "380685247141") {
        registeredUsers.add(chatId);

        bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${nameOfUser}\n–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω! –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞ —Ç–µ–ø–µ—Ä—å –¥–æ—Å—Ç—É–ø–Ω—ã.`, {
            reply_markup: {
                remove_keyboard: true
            }
        });

        const inlineKeyboard = [
            [{ text: 'Adidas', callback_data: 'store_0' }, { text: 'Zara', callback_data: 'store_1' }],
            [{ text: 'Nike', callback_data: 'store_2' }, { text: 'Puma', callback_data: 'store_3' }],
            [{ text: 'Bershka', callback_data: 'store_4' }, { text: '–º–∞–≥–∞–∑ 6', callback_data: 'store_5' }],
            [{ text: '–º–∞–≥–∞–∑ 7', callback_data: 'store_6' }, { text: '–º–∞–≥–∞–∑ 8', callback_data: 'store_7' }],
            [{ text: '–º–∞–≥–∞–∑ 9', callback_data: 'store_8' }, { text: '–º–∞–≥–∞–∑ 10', callback_data: 'store_9' }]
        ];

        bot.sendMessage(chatId, '–í—ã–±–µ—Ä–∏—Ç–µ –º–∞–≥–∞–∑–∏–Ω:', {
            reply_markup: {
                inline_keyboard: inlineKeyboard
            }
        });
    } else {
        bot.sendMessage(chatId, '–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω. –í–∞—à –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω.');
    }
});

bot.on('callback_query', async (callbackQuery) => {
    const msg = callbackQuery.message;
    const chatId = msg.chat.id;
    const messageId = msg.message_id;
    const callbackData = callbackQuery.data;

    if (callbackData.startsWith('store_')) {
        const storeIndex = parseInt(callbackData.split('_')[1]);
        const selectedStore = stores[storeIndex];

        bot.sendMessage(chatId, `–í—ã –≤—ã–±—Ä–∞–ª–∏: ${selectedStore}`);

        if (storeIndex === 0) {
            const products = await fetchAdidasProducts();

            if (products.length === 0) {
                bot.sendMessage(chatId, '–ù–∞–π–¥–µ–Ω–æ 0 —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
                return;
            }

            products.forEach(product => {
                bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}\n–¶–µ–Ω–∞: ${product.price}\n\n\n`);
            });

            setTimeout(() => {
                bot.sendMessage(chatId, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª?', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª', callback_data: 'add_to_channel' }]
                        ]
                    }
                });
            }, 5000);
        }

        else if  (storeIndex === 1) {
            const products = await fetchZaraProducts();

            if (products.length === 0) {
                bot.sendMessage(chatId, '–ù–∞–π–¥–µ–Ω–æ 0 —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
                return;
            }

            products.forEach(product => {
                bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}\n–¶–µ–Ω–∞: ${product.price}\n\n\n`);
            });

            setTimeout(() => {
                bot.sendMessage(chatId, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª?', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª', callback_data: 'add_to_channel' }]
                        ]
                    }
                });
            }, 5000);
        }
        else if (storeIndex === 2) {
            const products = await fetchNikeProducts();

            if (products.length === 0) {
                bot.sendMessage(chatId, '–ù–∞–π–¥–µ–Ω–æ 0 —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
                return;
            }

            products.forEach(product => {
                bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}\n–¶–µ–Ω–∞: ${product.price}\n\n\n`);
            });

            setTimeout(() => {
                bot.sendMessage(chatId, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª?', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª', callback_data: 'add_to_channel' }]
                        ]
                    }
                });
            }, 5000);
        }
        else if (storeIndex === 3) {
            const products = await fetchPumaProducts();

            if (products.length === 0) {
                bot.sendMessage(chatId, '–ù–∞–π–¥–µ–Ω–æ 0 —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
                return;
            }

            products.forEach(product => {
                bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}\n–¶–µ–Ω–∞: ${product.price}\n\n\n`);
            });

            setTimeout(() => {
                bot.sendMessage(chatId, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª?', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª', callback_data: 'add_to_channel' }]
                        ]
                    }
                });
            }, 5000);
        }
        else if (storeIndex === 4) {
            const products = await fetchBershkaProducts();

            if (products.length === 0) {
                bot.sendMessage(chatId, '–ù–∞–π–¥–µ–Ω–æ 0 —Ç–æ–≤–∞—Ä–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.');
                return;
            }

            products.forEach(product => {
                bot.sendMessage(chatId, `–ù–∞–∑–≤–∞–Ω–∏–µ: ${product.title}\n–¶–µ–Ω–∞: ${product.price}\n\n\n`);
            });

            setTimeout(() => {
                bot.sendMessage(chatId, '–•–æ—Ç–∏—Ç–µ –¥–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª?', {
                    reply_markup: {
                        inline_keyboard: [
                            [{ text: '–î–æ–±–∞–≤–∏—Ç—å –≤—Å–µ —Ç–æ–≤–∞—Ä—ã –≤ –∫–∞–Ω–∞–ª', callback_data: 'add_to_channel' }]
                        ]
                    }
                });
            }, 5000);
        }
        else {
            bot.sendMessage(chatId, '–≠—Ç–æ—Ç –º–∞–≥–∞–∑–∏–Ω –µ—â–µ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.');
        }
    } else if (callbackData === 'add_to_channel') {
        bot.deleteMessage(chatId, messageId);
        // –ª–æ–≥–∏–∫–∞ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–Ω–∞–ª
        bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã...');

        setTimeout(async () => {
            // –∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–∞–Ω–∞–ª
            bot.sendMessage(chatId, '–¢–æ–≤–∞—Ä—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ –∫–∞–Ω–∞–ª.');
        }, 3000);
    }
});

bot.onText(/\/info/, async (msg) => {
    const chatId = msg.chat.id;
    bot.sendMessage(chatId, `Help Buyer Bot ü§ñ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:\n\n` +
        `‚Ä¢ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /start.\n\n` +
        `‚Ä¢ –í—Å–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ—Ç–∞ –¥–æ—Å—Ç—É–ø–Ω—ã —Ç–æ–ª—å–∫–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n\n` +
        `‚Ä¢ –ë–æ—Ç –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è –∏–Ω—ã—Ö —Ü–µ–ª–µ–π, –ø–æ–º–∏–º–æ —Ç–µ—Ö, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –æ–Ω –±—ã–ª —Å–æ–∑–¥–∞–Ω.\n\n` +
        `‚Ä¢ –ê–≤—Ç–æ—Ä–∏–∑–∏—Ä–æ–≤–∞—Ç—å—Å—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ –±–æ—Ç–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ. –£–¥–∞—á–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è! üçÄ`);
});